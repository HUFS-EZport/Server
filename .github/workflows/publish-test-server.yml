name: 'Publish test server'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  
env:
  WITH_SSH: 'ssh -o StrictHostKeyChecking=no -i ./rsa_id -p ${{ secrets.TEST_SERVER_SSH_PORT }} ${{ secrets.TEST_SERVER_SSH_USERNAME }}@${{ secrets.TEST_SERVER_SSH_URL }}'

jobs:
  publish:
    name: 'Publish test server'
    runs-on: ubuntu-latest

    steps:
      - name: 'Get SSH key'
        run: |
          echo "${{ secrets.TEST_SERVER_SSH_KEY }}" > ./rsa_id
          chmod 600 ./rsa_id
      
      - name: 'Stop exist server'
        run: |
          ${{ env.WITH_SSH }} "cd ~/Server && docker-compose -f test-server.compose.yml down"

      - name: 'Pull latest code'
        if: always()
        run: |
          ${{ env.WITH_SSH }} "cd ~/Server && git pull origin main"

      - name: 'Set .env file'
        if: always()
        run: |
          echo "SERVER_PORT=${{ secrets.TEST_SERVER_PORT }}" > .env
          echo "DB_URL=${{ secrets.TEST_SERVER_DB_URL }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.TEST_SERVER_DB_PW }}" >> .env
          echo "MYSQL_USER=${{ secrets.TEST_SERVER_DB_USER }}" >> .env
          echo "REDIS_HOST=${{ secrets.TEST_SERVER_REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.TEST_SERVER_REDIS_PORT }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.TEST_SERVER_REDIS_PW }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.TEST_SERVER_JWT_SECRET }}" >> .env
          echo "NAVER_MAIL_PASSWORD=${{ secrets.TEST_SERVER_MAIL_PW }}">> .env
          echo "SERVER_URL"=${{ secrets.TEST_SERVER_URL }} >> .env

          scp -o StrictHostKeyChecking=no -i ./rsa_id -P ${{ secrets.TEST_SERVER_SSH_PORT }} .env ${{ secrets.TEST_SERVER_SSH_USERNAME }}@${{ secrets.TEST_SERVER_SSH_URL }}:~/Server/.env

      - name: 'Start server'
        if: always()
        run: |
          echo "cd ~/Server && chmod +x run-by-docker.sh && ./run-by-docker.sh" >> ./run.sh

          ${{ env.WITH_SSH }} "bash -s" < ./run.sh